#! /bin/sh
#
# Copyright (C) 2006 - 2010 Loic Dachary <loic@dachary.org>
# Copyright (C) 2004, 2005, 2006 Mekensleep <licensing@mekensleep.com>
#                                24 rue vieille du temple, 75004 Paris
#
# This software's license gives you freedom; you can copy, convey,
# propagate, redistribute and/or modify this program under the terms of
# the GNU Affero General Public License (AGPL) as published by the Free
# Software Foundation, either version 3 of the License, or (at your
# option) any later version of the AGPL.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program in a file in the toplevel directory called
# "AGPLv3".  If not, see <http://www.gnu.org/licenses/>.
#
# Authors:
#  Loic Dachary <loic@gnu.org>
#
# http://wiki.debian.org/LSBInitScripts
#
### BEGIN INIT INFO
# Provides:          poker-network
# Required-Start:    $network $remote_fs $syslog
# Required-Stop:     $network $remote_fs $syslog
# Should-Start:      mysql
# Should-Stop:       mysql
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: poker-network server and bots
# Description:       Multi player online poker server with
#                    bots running according to /etc/poker-network
### END INIT INFO

#
# Run bots that will connect to the poker server as instructed
# in /etc/poker-network/poker.bot.xml
#
RUN_BOTS=false

serverconfig=/etc/poker-network/poker.server.xml
botconfig=/etc/poker-network/poker.bot.xml
server_additional_args=''
bot_additional_args=''

server_kill_timeout='120'
bot_kill_timeout='30'

# Include python-poker-network defaults if available
if [ -f /etc/default/python-poker-network ] ; then
	. /etc/default/python-poker-network
fi

twistd=/usr/bin/twistd
reactor=epoll

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
name=poker-network
desc='poker server '

python=/usr/bin/python
python_lib_path=$(python -c 'from distutils import sysconfig; print(sysconfig.get_python_lib())')

lockfile=/etc/poker-network/lockfile

serverpidfile=/var/run/poker-network-server.pid
serverlogfile=/var/log/poker-network-server.log
serverplugin=pokerserver

botpidfile=/var/run/poker-network-bot.pid
botlogfile=/var/log/poker-network-bot.log
botplugin=pokerbot

more_args=--no_save

test -x ${twistd} || exit 0

set -e

ulimit -n 10240

case "$1" in
  start)
	echo -n "Starting ${desc}: "
	if [ -f $lockfile ]; then
		echo " not configured, abort."
		exit 0;
	fi
	${python} ${twistd} \
		--pidfile=${serverpidfile} \
		--logfile=${serverlogfile} ${more_args} \
		--reactor=${reactor} ${server_additional_args} \
		${serverplugin} --config=${serverconfig}
	if $RUN_BOTS ; then
		${python} ${twistd} \
			--pidfile=${botpidfile} \
			--logfile=${botlogfile} ${more_args} \
			--reactor=${reactor} ${bot_additional_args} \
		${botplugin} --config=${botconfig}
	else
		echo "Bots are disabled, edit /etc/default/python-poker-network to enable them."
	fi
	echo ${name}
	;;
  stop)
	echo -n "Stopping poker server ..."
	#no kill timeout since switch from HTTP to TCP (ticket 5495)
	#start-stop-daemon --stop --quiet --retry=-2/${server_kill_timeout}/-15/20/forever/-9/2 --pidfile=${serverpidfile} || true
	start-stop-daemon --stop --quiet --pidfile=${serverpidfile} || true
	if $RUN_BOTS ; then
		echo -n "Stopping poker bots ..."
		start-stop-daemon --stop --quiet --retry=-2/${bot_kill_timeout}/-15/20/forever/-9/2 --pidfile=${botpidfile} || true
		echo "done"
	fi
	echo " done."
	;;
  status)
    if [ -f ${serverpidfile} ] ; then
        MY_PID=$(cat $serverpidfile)
        ps -p $MY_PID > /dev/null 2>&1
		if [ $? -ne 0 ]; then
			echo "$desc not running"
			exit 1
		else
			echo "$desc running"
			exit 0
		fi
	else
		echo "$desc not running"
		exit 1
	fi
	;;
  bot-start)
	if $RUN_BOTS ; then
		echo -n "Starting poker bots ..."
		${python} ${twistd} \
			--pidfile=${botpidfile} \
			--logfile=${botlogfile} ${more_args} \
			--reactor=${reactor} ${bot_additional_args} \
		${botplugin} --config=${botconfig}
		echo "done"
	else
		echo "Bots are disabled"
	fi
	;;
  bot-stop)
	echo -n "Stopping poker bots ..."
	start-stop-daemon --stop --quiet --retry=-2/${bot_kill_timeout}/-15/20/forever/-9/2 --pidfile=${botpidfile} || true
	echo "done"
	;;
  rebot)
	echo "deprecated - use '$0 bot-restart' instead."
	$0 bot-restart
	;;
  restart|force-reload)
	#
	#	If the "reload" option is implemented, move the "force-reload"
	#	option to the "reload" entry above. If not, "force-reload" is
	#	just the same as "restart".
	#
	$0 stop
	$0 start
	;;
  force-stop)
        echo "try to kill process in ${serverpidfile}"
        /bin/kill -9 `/bin/cat ${serverpidfile}`
        if [ $? -gt 0 ]; then
                echo "error killing process"
                exit 1
        else
                echo "process successfully killed"
				echo "now start/stop again to cleanup ..."
                $0 start
                sleep 1
                $0 stop
                exit $?
                exit 0
        fi
        ;;
  bot-restart)
	$0 bot-stop
	$0 bot-start
	;;
  *)
	N=/etc/init.d/$NAME
	echo "Usage: $N {start|stop|force-stop|restart|status|force-reload|bot-start|bot-stop|bot-restart}" >&2
	exit 1
	;;
esac

exit 0
